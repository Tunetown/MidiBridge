
const TEST_DATA_FOLDER = "data/";

describe('Checksum (with reference data from the Python version)', function() {

    it('Compare', function() {
		testAgainstRefData(
            file_path = TEST_DATA_FOLDER + "pmb_checksum_1.json",
            data = [0]
        )

        testAgainstRefData(
            file_path = TEST_DATA_FOLDER + "pmb_checksum_2.json",
            data = [0xff, 0xab, 0x77, 0x6c, 0x99, 0x00, 0x00, 0x00, 0x66]
        )

        testAgainstRefData(
            file_path = TEST_DATA_FOLDER + "pmb_checksum_3.json",
            data = [0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff]
        )

        testAgainstRefData(
            file_path = TEST_DATA_FOLDER + "pmb_checksum_4.json",
            data = [0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff]
        )

        testAgainstRefData(
            file_path = TEST_DATA_FOLDER + "pmb_checksum_5.json",
            data = [0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x66, 0x77, 0x88, 0x99, 0xac, 0xdc, 0xa4, 0x52, 0x87, 0x98, 0x09, 0x90, 0x65, 0x4e, 0x3e, 0xe3, 0x2a, 0x6e, 0xff, 0xff, 0x99]
        )
    });
    
    
});


function testAgainstRefData(filePath, data) {
	const bridge = new JsMidiBridge(null, null);

    // Load messages   
    const data_json = getRefData(filePath);
    
    const exp_checksum = new Uint8Array(JSON.parse(data_json));
    
    const checksum = bridge.getChecksum(data);

	expect(checksum).toEqual(exp_checksum);
}

function getRefData(filePath) {
	const request = new XMLHttpRequest();
	request.open("GET", filePath, false);
	console.log(filePath)
	request.send(null);
	if (request.status !== 200) {
		throw new Error("HTTP Error: " + request.status);				
	}
	
	console.log(request.responseText);
	
	return request.responseText;
}